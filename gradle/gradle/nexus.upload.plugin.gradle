gradle.taskGraph.whenReady { taskGraph ->
   if (taskGraph.allTasks.any { it.name == 'uploadArchives' }) {
        java.io.Console console = System.console()
        console.printf "\n\nWe have to sign some things in this build." +
                "\n\nPlease enter your signing details.\n\n"
       def id
       def file
       def password
        if (!project.hasProperty('pgpKeyId')){
            id = console.readLine("PGP Key Id: ")
        } else {
            id = pgpKeyId
            console.printf "found id in properties: " + id
        }
        if (!project.hasProperty('secringFilePath')) {
            file = console.readLine("PGP Secret Key Ring File (absolute path): ")
        } else {
            file = secringFilePath
            console.printf "found pathfile in properties: " + file
        }
        if (!project.hasProperty('pgpPassword')) {
            password = console.readPassword("PGP Private Key Password: ")
        } else {
            password = pgpPassword
            console.printf "found password in properties: *******"
        }
        allprojects { ext."signing.keyId" = id }
        allprojects { ext."signing.secretKeyRingFile" = file }
        allprojects { ext."signing.password" = password }


        console.printf "\nThanks.\n\n"
    }
}

subprojects {
    apply plugin: 'com.bmuschko.nexus'

    modifyPom {
        project {
            name 'ElasTest'
            description 'ElasTest Platform Manager (EPM) client for Java'
            url 'http://elastest.io'
            inceptionYear '2019'
            scm {
                url 'http://elastest.io'
                connection ''
                developerConnection 'https://github.com/elastest'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repositories'
                }
            }

            developers {
                developer {
                    id 'mpauls'
                    name 'Michael Pauls'
                    email 'michael.pauls@tu-berlin.de'
                }
            }
        }
    }

    extraArchive {
        sources = true
        tests = false
        javadoc = true
    }

    nexus {
        sign = true
        repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}
